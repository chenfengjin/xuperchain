/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: contract.proto */

#ifndef PROTOBUF_C_contract_2eproto__INCLUDED
#define PROTOBUF_C_contract_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Xchain__Contract__Sdk__PingRequest Xchain__Contract__Sdk__PingRequest;
typedef struct _Xchain__Contract__Sdk__PingResponse Xchain__Contract__Sdk__PingResponse;
typedef struct _Xchain__Contract__Sdk__NativeCallRequest Xchain__Contract__Sdk__NativeCallRequest;
typedef struct _Xchain__Contract__Sdk__NativeCallResponse Xchain__Contract__Sdk__NativeCallResponse;
typedef struct _Xchain__Contract__Sdk__ArgPair Xchain__Contract__Sdk__ArgPair;
typedef struct _Xchain__Contract__Sdk__CallArgs Xchain__Contract__Sdk__CallArgs;
typedef struct _Xchain__Contract__Sdk__SyscallHeader Xchain__Contract__Sdk__SyscallHeader;
typedef struct _Xchain__Contract__Sdk__PutRequest Xchain__Contract__Sdk__PutRequest;
typedef struct _Xchain__Contract__Sdk__PutResponse Xchain__Contract__Sdk__PutResponse;
typedef struct _Xchain__Contract__Sdk__GetRequest Xchain__Contract__Sdk__GetRequest;
typedef struct _Xchain__Contract__Sdk__GetResponse Xchain__Contract__Sdk__GetResponse;
typedef struct _Xchain__Contract__Sdk__DeleteRequest Xchain__Contract__Sdk__DeleteRequest;
typedef struct _Xchain__Contract__Sdk__DeleteResponse Xchain__Contract__Sdk__DeleteResponse;
typedef struct _Xchain__Contract__Sdk__IteratorRequest Xchain__Contract__Sdk__IteratorRequest;
typedef struct _Xchain__Contract__Sdk__IteratorItem Xchain__Contract__Sdk__IteratorItem;
typedef struct _Xchain__Contract__Sdk__IteratorResponse Xchain__Contract__Sdk__IteratorResponse;
typedef struct _Xchain__Contract__Sdk__QueryTxRequest Xchain__Contract__Sdk__QueryTxRequest;
typedef struct _Xchain__Contract__Sdk__QueryTxResponse Xchain__Contract__Sdk__QueryTxResponse;
typedef struct _Xchain__Contract__Sdk__QueryBlockRequest Xchain__Contract__Sdk__QueryBlockRequest;
typedef struct _Xchain__Contract__Sdk__QueryBlockResponse Xchain__Contract__Sdk__QueryBlockResponse;
typedef struct _Xchain__Contract__Sdk__TransferRequest Xchain__Contract__Sdk__TransferRequest;
typedef struct _Xchain__Contract__Sdk__TransferResponse Xchain__Contract__Sdk__TransferResponse;
typedef struct _Xchain__Contract__Sdk__ContractCallRequest Xchain__Contract__Sdk__ContractCallRequest;
typedef struct _Xchain__Contract__Sdk__ContractCallResponse Xchain__Contract__Sdk__ContractCallResponse;
typedef struct _Xchain__Contract__Sdk__CrossContractQueryRequest Xchain__Contract__Sdk__CrossContractQueryRequest;
typedef struct _Xchain__Contract__Sdk__CrossContractQueryResponse Xchain__Contract__Sdk__CrossContractQueryResponse;
typedef struct _Xchain__Contract__Sdk__Response Xchain__Contract__Sdk__Response;
typedef struct _Xchain__Contract__Sdk__SetOutputRequest Xchain__Contract__Sdk__SetOutputRequest;
typedef struct _Xchain__Contract__Sdk__SetOutputResponse Xchain__Contract__Sdk__SetOutputResponse;
typedef struct _Xchain__Contract__Sdk__GetCallArgsRequest Xchain__Contract__Sdk__GetCallArgsRequest;
typedef struct _Xchain__Contract__Sdk__TxInput Xchain__Contract__Sdk__TxInput;
typedef struct _Xchain__Contract__Sdk__TxOutput Xchain__Contract__Sdk__TxOutput;
typedef struct _Xchain__Contract__Sdk__Transaction Xchain__Contract__Sdk__Transaction;
typedef struct _Xchain__Contract__Sdk__Block Xchain__Contract__Sdk__Block;
typedef struct _Xchain__Contract__Sdk__GetAccountAddressesRequest Xchain__Contract__Sdk__GetAccountAddressesRequest;
typedef struct _Xchain__Contract__Sdk__GetAccountAddressesResponse Xchain__Contract__Sdk__GetAccountAddressesResponse;
typedef struct _Xchain__Contract__Sdk__PostLogRequest Xchain__Contract__Sdk__PostLogRequest;
typedef struct _Xchain__Contract__Sdk__PostLogResponse Xchain__Contract__Sdk__PostLogResponse;
typedef struct _Xchain__Contract__Sdk__EmitEventRequest Xchain__Contract__Sdk__EmitEventRequest;
typedef struct _Xchain__Contract__Sdk__EmitEventResponse Xchain__Contract__Sdk__EmitEventResponse;


/* --- enums --- */


/* --- messages --- */

struct  _Xchain__Contract__Sdk__PingRequest
{
  ProtobufCMessage base;
};
#define XCHAIN__CONTRACT__SDK__PING_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__ping_request__descriptor) \
     }


struct  _Xchain__Contract__Sdk__PingResponse
{
  ProtobufCMessage base;
};
#define XCHAIN__CONTRACT__SDK__PING_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__ping_response__descriptor) \
     }


struct  _Xchain__Contract__Sdk__NativeCallRequest
{
  ProtobufCMessage base;
  /*
   * The context id of this request
   */
  int64_t ctxid;
};
#define XCHAIN__CONTRACT__SDK__NATIVE_CALL_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__native_call_request__descriptor) \
    , 0 }


struct  _Xchain__Contract__Sdk__NativeCallResponse
{
  ProtobufCMessage base;
};
#define XCHAIN__CONTRACT__SDK__NATIVE_CALL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__native_call_response__descriptor) \
     }


struct  _Xchain__Contract__Sdk__ArgPair
{
  ProtobufCMessage base;
  char *key;
  ProtobufCBinaryData value;
};
#define XCHAIN__CONTRACT__SDK__ARG_PAIR__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__arg_pair__descriptor) \
    , (char *)protobuf_c_empty_string, {0,NULL} }


struct  _Xchain__Contract__Sdk__CallArgs
{
  ProtobufCMessage base;
  char *method;
  size_t n_args;
  Xchain__Contract__Sdk__ArgPair **args;
  char *initiator;
  size_t n_auth_require;
  char **auth_require;
  char *transfer_amount;
};
#define XCHAIN__CONTRACT__SDK__CALL_ARGS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__call_args__descriptor) \
    , (char *)protobuf_c_empty_string, 0,NULL, (char *)protobuf_c_empty_string, 0,NULL, (char *)protobuf_c_empty_string }


struct  _Xchain__Contract__Sdk__SyscallHeader
{
  ProtobufCMessage base;
  int64_t ctxid;
};
#define XCHAIN__CONTRACT__SDK__SYSCALL_HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__syscall_header__descriptor) \
    , 0 }


struct  _Xchain__Contract__Sdk__PutRequest
{
  ProtobufCMessage base;
  Xchain__Contract__Sdk__SyscallHeader *header;
  ProtobufCBinaryData key;
  ProtobufCBinaryData value;
};
#define XCHAIN__CONTRACT__SDK__PUT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__put_request__descriptor) \
    , NULL, {0,NULL}, {0,NULL} }


struct  _Xchain__Contract__Sdk__PutResponse
{
  ProtobufCMessage base;
};
#define XCHAIN__CONTRACT__SDK__PUT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__put_response__descriptor) \
     }


struct  _Xchain__Contract__Sdk__GetRequest
{
  ProtobufCMessage base;
  Xchain__Contract__Sdk__SyscallHeader *header;
  ProtobufCBinaryData key;
};
#define XCHAIN__CONTRACT__SDK__GET_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__get_request__descriptor) \
    , NULL, {0,NULL} }


struct  _Xchain__Contract__Sdk__GetResponse
{
  ProtobufCMessage base;
  ProtobufCBinaryData value;
};
#define XCHAIN__CONTRACT__SDK__GET_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__get_response__descriptor) \
    , {0,NULL} }


struct  _Xchain__Contract__Sdk__DeleteRequest
{
  ProtobufCMessage base;
  Xchain__Contract__Sdk__SyscallHeader *header;
  ProtobufCBinaryData key;
};
#define XCHAIN__CONTRACT__SDK__DELETE_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__delete_request__descriptor) \
    , NULL, {0,NULL} }


struct  _Xchain__Contract__Sdk__DeleteResponse
{
  ProtobufCMessage base;
};
#define XCHAIN__CONTRACT__SDK__DELETE_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__delete_response__descriptor) \
     }


struct  _Xchain__Contract__Sdk__IteratorRequest
{
  ProtobufCMessage base;
  Xchain__Contract__Sdk__SyscallHeader *header;
  /*
   * start和limit为[start, limit)
   */
  ProtobufCBinaryData start;
  ProtobufCBinaryData limit;
  /*
   * cap代表一次请求的最大IteratorItem个数，如果为0则采用xchain的默认配置
   */
  int32_t cap;
};
#define XCHAIN__CONTRACT__SDK__ITERATOR_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__iterator_request__descriptor) \
    , NULL, {0,NULL}, {0,NULL}, 0 }


struct  _Xchain__Contract__Sdk__IteratorItem
{
  ProtobufCMessage base;
  ProtobufCBinaryData key;
  ProtobufCBinaryData value;
};
#define XCHAIN__CONTRACT__SDK__ITERATOR_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__iterator_item__descriptor) \
    , {0,NULL}, {0,NULL} }


struct  _Xchain__Contract__Sdk__IteratorResponse
{
  ProtobufCMessage base;
  size_t n_items;
  Xchain__Contract__Sdk__IteratorItem **items;
};
#define XCHAIN__CONTRACT__SDK__ITERATOR_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__iterator_response__descriptor) \
    , 0,NULL }


struct  _Xchain__Contract__Sdk__QueryTxRequest
{
  ProtobufCMessage base;
  Xchain__Contract__Sdk__SyscallHeader *header;
  char *txid;
};
#define XCHAIN__CONTRACT__SDK__QUERY_TX_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__query_tx_request__descriptor) \
    , NULL, (char *)protobuf_c_empty_string }


struct  _Xchain__Contract__Sdk__QueryTxResponse
{
  ProtobufCMessage base;
  /*
   * defined in user code
   */
  Xchain__Contract__Sdk__Transaction *tx;
};
#define XCHAIN__CONTRACT__SDK__QUERY_TX_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__query_tx_response__descriptor) \
    , NULL }


struct  _Xchain__Contract__Sdk__QueryBlockRequest
{
  ProtobufCMessage base;
  Xchain__Contract__Sdk__SyscallHeader *header;
  char *blockid;
};
#define XCHAIN__CONTRACT__SDK__QUERY_BLOCK_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__query_block_request__descriptor) \
    , NULL, (char *)protobuf_c_empty_string }


struct  _Xchain__Contract__Sdk__QueryBlockResponse
{
  ProtobufCMessage base;
  /*
   * defined in user code
   */
  Xchain__Contract__Sdk__Block *block;
};
#define XCHAIN__CONTRACT__SDK__QUERY_BLOCK_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__query_block_response__descriptor) \
    , NULL }


struct  _Xchain__Contract__Sdk__TransferRequest
{
  ProtobufCMessage base;
  Xchain__Contract__Sdk__SyscallHeader *header;
  char *from;
  char *to;
  char *amount;
};
#define XCHAIN__CONTRACT__SDK__TRANSFER_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__transfer_request__descriptor) \
    , NULL, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


struct  _Xchain__Contract__Sdk__TransferResponse
{
  ProtobufCMessage base;
};
#define XCHAIN__CONTRACT__SDK__TRANSFER_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__transfer_response__descriptor) \
     }


struct  _Xchain__Contract__Sdk__ContractCallRequest
{
  ProtobufCMessage base;
  Xchain__Contract__Sdk__SyscallHeader *header;
  char *module;
  char *contract;
  char *method;
  size_t n_args;
  Xchain__Contract__Sdk__ArgPair **args;
};
#define XCHAIN__CONTRACT__SDK__CONTRACT_CALL_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__contract_call_request__descriptor) \
    , NULL, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL }


struct  _Xchain__Contract__Sdk__ContractCallResponse
{
  ProtobufCMessage base;
  Xchain__Contract__Sdk__Response *response;
};
#define XCHAIN__CONTRACT__SDK__CONTRACT_CALL_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__contract_call_response__descriptor) \
    , NULL }


struct  _Xchain__Contract__Sdk__CrossContractQueryRequest
{
  ProtobufCMessage base;
  Xchain__Contract__Sdk__SyscallHeader *header;
  char *uri;
  size_t n_args;
  Xchain__Contract__Sdk__ArgPair **args;
};
#define XCHAIN__CONTRACT__SDK__CROSS_CONTRACT_QUERY_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__cross_contract_query_request__descriptor) \
    , NULL, (char *)protobuf_c_empty_string, 0,NULL }


struct  _Xchain__Contract__Sdk__CrossContractQueryResponse
{
  ProtobufCMessage base;
  Xchain__Contract__Sdk__Response *response;
};
#define XCHAIN__CONTRACT__SDK__CROSS_CONTRACT_QUERY_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__cross_contract_query_response__descriptor) \
    , NULL }


struct  _Xchain__Contract__Sdk__Response
{
  ProtobufCMessage base;
  int32_t status;
  char *message;
  ProtobufCBinaryData body;
};
#define XCHAIN__CONTRACT__SDK__RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__response__descriptor) \
    , 0, (char *)protobuf_c_empty_string, {0,NULL} }


struct  _Xchain__Contract__Sdk__SetOutputRequest
{
  ProtobufCMessage base;
  Xchain__Contract__Sdk__SyscallHeader *header;
  Xchain__Contract__Sdk__Response *response;
};
#define XCHAIN__CONTRACT__SDK__SET_OUTPUT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__set_output_request__descriptor) \
    , NULL, NULL }


struct  _Xchain__Contract__Sdk__SetOutputResponse
{
  ProtobufCMessage base;
};
#define XCHAIN__CONTRACT__SDK__SET_OUTPUT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__set_output_response__descriptor) \
     }


struct  _Xchain__Contract__Sdk__GetCallArgsRequest
{
  ProtobufCMessage base;
  Xchain__Contract__Sdk__SyscallHeader *header;
};
#define XCHAIN__CONTRACT__SDK__GET_CALL_ARGS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__get_call_args_request__descriptor) \
    , NULL }


/*
 * Transaction input
 */
struct  _Xchain__Contract__Sdk__TxInput
{
  ProtobufCMessage base;
  /*
   * The transaction id referenced to
   */
  char *ref_txid;
  /*
   * The output offset of the transaction referenced to
   */
  int32_t ref_offset;
  /*
   * The address of the launcher
   */
  ProtobufCBinaryData from_addr;
  /*
   * The amount of the transaction
   */
  char *amount;
  /*
   * Frozen height
   */
  int64_t frozen_height;
};
#define XCHAIN__CONTRACT__SDK__TX_INPUT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__tx_input__descriptor) \
    , (char *)protobuf_c_empty_string, 0, {0,NULL}, (char *)protobuf_c_empty_string, 0 }


/*
 * Transaction output
 */
struct  _Xchain__Contract__Sdk__TxOutput
{
  ProtobufCMessage base;
  /*
   * The amount of the transaction
   */
  char *amount;
  /*
   * The address of the launcher
   */
  ProtobufCBinaryData to_addr;
  /*
   * Fronzen height
   */
  int64_t frozen_height;
};
#define XCHAIN__CONTRACT__SDK__TX_OUTPUT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__tx_output__descriptor) \
    , (char *)protobuf_c_empty_string, {0,NULL}, 0 }


/*
 * Transaction is the information of the transaction
 */
struct  _Xchain__Contract__Sdk__Transaction
{
  ProtobufCMessage base;
  /*
   * txid is the id of this transaction
   */
  char *txid;
  /*
   * the blockid the transaction belong to
   */
  char *blockid;
  /*
   * Transaction input list
   */
  size_t n_tx_inputs;
  Xchain__Contract__Sdk__TxInput **tx_inputs;
  /*
   * Transaction output list
   */
  size_t n_tx_outputs;
  Xchain__Contract__Sdk__TxOutput **tx_outputs;
  /*
   * Transaction description or system contract
   */
  ProtobufCBinaryData desc;
  /*
   * 权限系统新增字段
   * 交易发起者, 可以是一个Address或者一个Account
   */
  char *initiator;
  /*
   * 交易发起需要被收集签名的AddressURL集合信息，包括用于utxo转账和用于合约调用
   */
  size_t n_auth_require;
  char **auth_require;
};
#define XCHAIN__CONTRACT__SDK__TRANSACTION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__transaction__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0,NULL, 0,NULL, {0,NULL}, (char *)protobuf_c_empty_string, 0,NULL }


/*
 * The block struct
 */
struct  _Xchain__Contract__Sdk__Block
{
  ProtobufCMessage base;
  /*
   * blockid generate the hash sign of the block used by sha256
   */
  char *blockid;
  /*
   * pre_hash is the parent blockid of the block
   */
  char *pre_hash;
  /*
   * The miner id
   */
  ProtobufCBinaryData proposer;
  /*
   * The sign which miner signed: blockid + nonce + timestamp
   */
  char *sign;
  /*
   * The pk of the miner
   */
  ProtobufCBinaryData pubkey;
  /*
   * The height of the blockchain
   */
  int64_t height;
  /*
   * Transactions of the block, only txid stored on kv, the detail information stored in another table
   */
  size_t n_txids;
  char **txids;
  /*
   * The transaction count of the block
   */
  int32_t tx_count;
  /*
   *下面的属性会动态变化
   * If the block is on the trunk
   */
  protobuf_c_boolean in_trunk;
  /*
   * Next next block which on trunk
   */
  char *next_hash;
};
#define XCHAIN__CONTRACT__SDK__BLOCK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__block__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, {0,NULL}, (char *)protobuf_c_empty_string, {0,NULL}, 0, 0,NULL, 0, 0, (char *)protobuf_c_empty_string }


struct  _Xchain__Contract__Sdk__GetAccountAddressesRequest
{
  ProtobufCMessage base;
  Xchain__Contract__Sdk__SyscallHeader *header;
  char *account;
};
#define XCHAIN__CONTRACT__SDK__GET_ACCOUNT_ADDRESSES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__get_account_addresses_request__descriptor) \
    , NULL, (char *)protobuf_c_empty_string }


struct  _Xchain__Contract__Sdk__GetAccountAddressesResponse
{
  ProtobufCMessage base;
  size_t n_addresses;
  char **addresses;
};
#define XCHAIN__CONTRACT__SDK__GET_ACCOUNT_ADDRESSES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__get_account_addresses_response__descriptor) \
    , 0,NULL }


struct  _Xchain__Contract__Sdk__PostLogRequest
{
  ProtobufCMessage base;
  Xchain__Contract__Sdk__SyscallHeader *header;
  char *entry;
};
#define XCHAIN__CONTRACT__SDK__POST_LOG_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__post_log_request__descriptor) \
    , NULL, (char *)protobuf_c_empty_string }


struct  _Xchain__Contract__Sdk__PostLogResponse
{
  ProtobufCMessage base;
  char *entry;
};
#define XCHAIN__CONTRACT__SDK__POST_LOG_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__post_log_response__descriptor) \
    , (char *)protobuf_c_empty_string }


struct  _Xchain__Contract__Sdk__EmitEventRequest
{
  ProtobufCMessage base;
  Xchain__Contract__Sdk__SyscallHeader *header;
  char *name;
  ProtobufCBinaryData body;
};
#define XCHAIN__CONTRACT__SDK__EMIT_EVENT_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__emit_event_request__descriptor) \
    , NULL, (char *)protobuf_c_empty_string, {0,NULL} }


struct  _Xchain__Contract__Sdk__EmitEventResponse
{
  ProtobufCMessage base;
};
#define XCHAIN__CONTRACT__SDK__EMIT_EVENT_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&xchain__contract__sdk__emit_event_response__descriptor) \
     }


/* Xchain__Contract__Sdk__PingRequest methods */
void   xchain__contract__sdk__ping_request__init
                     (Xchain__Contract__Sdk__PingRequest         *message);
size_t xchain__contract__sdk__ping_request__get_packed_size
                     (const Xchain__Contract__Sdk__PingRequest   *message);
size_t xchain__contract__sdk__ping_request__pack
                     (const Xchain__Contract__Sdk__PingRequest   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__ping_request__pack_to_buffer
                     (const Xchain__Contract__Sdk__PingRequest   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__PingRequest *
       xchain__contract__sdk__ping_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__ping_request__free_unpacked
                     (Xchain__Contract__Sdk__PingRequest *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__PingResponse methods */
void   xchain__contract__sdk__ping_response__init
                     (Xchain__Contract__Sdk__PingResponse         *message);
size_t xchain__contract__sdk__ping_response__get_packed_size
                     (const Xchain__Contract__Sdk__PingResponse   *message);
size_t xchain__contract__sdk__ping_response__pack
                     (const Xchain__Contract__Sdk__PingResponse   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__ping_response__pack_to_buffer
                     (const Xchain__Contract__Sdk__PingResponse   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__PingResponse *
       xchain__contract__sdk__ping_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__ping_response__free_unpacked
                     (Xchain__Contract__Sdk__PingResponse *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__NativeCallRequest methods */
void   xchain__contract__sdk__native_call_request__init
                     (Xchain__Contract__Sdk__NativeCallRequest         *message);
size_t xchain__contract__sdk__native_call_request__get_packed_size
                     (const Xchain__Contract__Sdk__NativeCallRequest   *message);
size_t xchain__contract__sdk__native_call_request__pack
                     (const Xchain__Contract__Sdk__NativeCallRequest   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__native_call_request__pack_to_buffer
                     (const Xchain__Contract__Sdk__NativeCallRequest   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__NativeCallRequest *
       xchain__contract__sdk__native_call_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__native_call_request__free_unpacked
                     (Xchain__Contract__Sdk__NativeCallRequest *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__NativeCallResponse methods */
void   xchain__contract__sdk__native_call_response__init
                     (Xchain__Contract__Sdk__NativeCallResponse         *message);
size_t xchain__contract__sdk__native_call_response__get_packed_size
                     (const Xchain__Contract__Sdk__NativeCallResponse   *message);
size_t xchain__contract__sdk__native_call_response__pack
                     (const Xchain__Contract__Sdk__NativeCallResponse   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__native_call_response__pack_to_buffer
                     (const Xchain__Contract__Sdk__NativeCallResponse   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__NativeCallResponse *
       xchain__contract__sdk__native_call_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__native_call_response__free_unpacked
                     (Xchain__Contract__Sdk__NativeCallResponse *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__ArgPair methods */
void   xchain__contract__sdk__arg_pair__init
                     (Xchain__Contract__Sdk__ArgPair         *message);
size_t xchain__contract__sdk__arg_pair__get_packed_size
                     (const Xchain__Contract__Sdk__ArgPair   *message);
size_t xchain__contract__sdk__arg_pair__pack
                     (const Xchain__Contract__Sdk__ArgPair   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__arg_pair__pack_to_buffer
                     (const Xchain__Contract__Sdk__ArgPair   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__ArgPair *
       xchain__contract__sdk__arg_pair__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__arg_pair__free_unpacked
                     (Xchain__Contract__Sdk__ArgPair *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__CallArgs methods */
void   xchain__contract__sdk__call_args__init
                     (Xchain__Contract__Sdk__CallArgs         *message);
size_t xchain__contract__sdk__call_args__get_packed_size
                     (const Xchain__Contract__Sdk__CallArgs   *message);
size_t xchain__contract__sdk__call_args__pack
                     (const Xchain__Contract__Sdk__CallArgs   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__call_args__pack_to_buffer
                     (const Xchain__Contract__Sdk__CallArgs   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__CallArgs *
       xchain__contract__sdk__call_args__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__call_args__free_unpacked
                     (Xchain__Contract__Sdk__CallArgs *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__SyscallHeader methods */
void   xchain__contract__sdk__syscall_header__init
                     (Xchain__Contract__Sdk__SyscallHeader         *message);
size_t xchain__contract__sdk__syscall_header__get_packed_size
                     (const Xchain__Contract__Sdk__SyscallHeader   *message);
size_t xchain__contract__sdk__syscall_header__pack
                     (const Xchain__Contract__Sdk__SyscallHeader   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__syscall_header__pack_to_buffer
                     (const Xchain__Contract__Sdk__SyscallHeader   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__SyscallHeader *
       xchain__contract__sdk__syscall_header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__syscall_header__free_unpacked
                     (Xchain__Contract__Sdk__SyscallHeader *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__PutRequest methods */
void   xchain__contract__sdk__put_request__init
                     (Xchain__Contract__Sdk__PutRequest         *message);
size_t xchain__contract__sdk__put_request__get_packed_size
                     (const Xchain__Contract__Sdk__PutRequest   *message);
size_t xchain__contract__sdk__put_request__pack
                     (const Xchain__Contract__Sdk__PutRequest   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__put_request__pack_to_buffer
                     (const Xchain__Contract__Sdk__PutRequest   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__PutRequest *
       xchain__contract__sdk__put_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__put_request__free_unpacked
                     (Xchain__Contract__Sdk__PutRequest *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__PutResponse methods */
void   xchain__contract__sdk__put_response__init
                     (Xchain__Contract__Sdk__PutResponse         *message);
size_t xchain__contract__sdk__put_response__get_packed_size
                     (const Xchain__Contract__Sdk__PutResponse   *message);
size_t xchain__contract__sdk__put_response__pack
                     (const Xchain__Contract__Sdk__PutResponse   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__put_response__pack_to_buffer
                     (const Xchain__Contract__Sdk__PutResponse   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__PutResponse *
       xchain__contract__sdk__put_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__put_response__free_unpacked
                     (Xchain__Contract__Sdk__PutResponse *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__GetRequest methods */
void   xchain__contract__sdk__get_request__init
                     (Xchain__Contract__Sdk__GetRequest         *message);
size_t xchain__contract__sdk__get_request__get_packed_size
                     (const Xchain__Contract__Sdk__GetRequest   *message);
size_t xchain__contract__sdk__get_request__pack
                     (const Xchain__Contract__Sdk__GetRequest   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__get_request__pack_to_buffer
                     (const Xchain__Contract__Sdk__GetRequest   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__GetRequest *
       xchain__contract__sdk__get_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__get_request__free_unpacked
                     (Xchain__Contract__Sdk__GetRequest *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__GetResponse methods */
void   xchain__contract__sdk__get_response__init
                     (Xchain__Contract__Sdk__GetResponse         *message);
size_t xchain__contract__sdk__get_response__get_packed_size
                     (const Xchain__Contract__Sdk__GetResponse   *message);
size_t xchain__contract__sdk__get_response__pack
                     (const Xchain__Contract__Sdk__GetResponse   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__get_response__pack_to_buffer
                     (const Xchain__Contract__Sdk__GetResponse   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__GetResponse *
       xchain__contract__sdk__get_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__get_response__free_unpacked
                     (Xchain__Contract__Sdk__GetResponse *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__DeleteRequest methods */
void   xchain__contract__sdk__delete_request__init
                     (Xchain__Contract__Sdk__DeleteRequest         *message);
size_t xchain__contract__sdk__delete_request__get_packed_size
                     (const Xchain__Contract__Sdk__DeleteRequest   *message);
size_t xchain__contract__sdk__delete_request__pack
                     (const Xchain__Contract__Sdk__DeleteRequest   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__delete_request__pack_to_buffer
                     (const Xchain__Contract__Sdk__DeleteRequest   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__DeleteRequest *
       xchain__contract__sdk__delete_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__delete_request__free_unpacked
                     (Xchain__Contract__Sdk__DeleteRequest *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__DeleteResponse methods */
void   xchain__contract__sdk__delete_response__init
                     (Xchain__Contract__Sdk__DeleteResponse         *message);
size_t xchain__contract__sdk__delete_response__get_packed_size
                     (const Xchain__Contract__Sdk__DeleteResponse   *message);
size_t xchain__contract__sdk__delete_response__pack
                     (const Xchain__Contract__Sdk__DeleteResponse   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__delete_response__pack_to_buffer
                     (const Xchain__Contract__Sdk__DeleteResponse   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__DeleteResponse *
       xchain__contract__sdk__delete_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__delete_response__free_unpacked
                     (Xchain__Contract__Sdk__DeleteResponse *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__IteratorRequest methods */
void   xchain__contract__sdk__iterator_request__init
                     (Xchain__Contract__Sdk__IteratorRequest         *message);
size_t xchain__contract__sdk__iterator_request__get_packed_size
                     (const Xchain__Contract__Sdk__IteratorRequest   *message);
size_t xchain__contract__sdk__iterator_request__pack
                     (const Xchain__Contract__Sdk__IteratorRequest   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__iterator_request__pack_to_buffer
                     (const Xchain__Contract__Sdk__IteratorRequest   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__IteratorRequest *
       xchain__contract__sdk__iterator_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__iterator_request__free_unpacked
                     (Xchain__Contract__Sdk__IteratorRequest *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__IteratorItem methods */
void   xchain__contract__sdk__iterator_item__init
                     (Xchain__Contract__Sdk__IteratorItem         *message);
size_t xchain__contract__sdk__iterator_item__get_packed_size
                     (const Xchain__Contract__Sdk__IteratorItem   *message);
size_t xchain__contract__sdk__iterator_item__pack
                     (const Xchain__Contract__Sdk__IteratorItem   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__iterator_item__pack_to_buffer
                     (const Xchain__Contract__Sdk__IteratorItem   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__IteratorItem *
       xchain__contract__sdk__iterator_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__iterator_item__free_unpacked
                     (Xchain__Contract__Sdk__IteratorItem *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__IteratorResponse methods */
void   xchain__contract__sdk__iterator_response__init
                     (Xchain__Contract__Sdk__IteratorResponse         *message);
size_t xchain__contract__sdk__iterator_response__get_packed_size
                     (const Xchain__Contract__Sdk__IteratorResponse   *message);
size_t xchain__contract__sdk__iterator_response__pack
                     (const Xchain__Contract__Sdk__IteratorResponse   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__iterator_response__pack_to_buffer
                     (const Xchain__Contract__Sdk__IteratorResponse   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__IteratorResponse *
       xchain__contract__sdk__iterator_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__iterator_response__free_unpacked
                     (Xchain__Contract__Sdk__IteratorResponse *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__QueryTxRequest methods */
void   xchain__contract__sdk__query_tx_request__init
                     (Xchain__Contract__Sdk__QueryTxRequest         *message);
size_t xchain__contract__sdk__query_tx_request__get_packed_size
                     (const Xchain__Contract__Sdk__QueryTxRequest   *message);
size_t xchain__contract__sdk__query_tx_request__pack
                     (const Xchain__Contract__Sdk__QueryTxRequest   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__query_tx_request__pack_to_buffer
                     (const Xchain__Contract__Sdk__QueryTxRequest   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__QueryTxRequest *
       xchain__contract__sdk__query_tx_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__query_tx_request__free_unpacked
                     (Xchain__Contract__Sdk__QueryTxRequest *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__QueryTxResponse methods */
void   xchain__contract__sdk__query_tx_response__init
                     (Xchain__Contract__Sdk__QueryTxResponse         *message);
size_t xchain__contract__sdk__query_tx_response__get_packed_size
                     (const Xchain__Contract__Sdk__QueryTxResponse   *message);
size_t xchain__contract__sdk__query_tx_response__pack
                     (const Xchain__Contract__Sdk__QueryTxResponse   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__query_tx_response__pack_to_buffer
                     (const Xchain__Contract__Sdk__QueryTxResponse   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__QueryTxResponse *
       xchain__contract__sdk__query_tx_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__query_tx_response__free_unpacked
                     (Xchain__Contract__Sdk__QueryTxResponse *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__QueryBlockRequest methods */
void   xchain__contract__sdk__query_block_request__init
                     (Xchain__Contract__Sdk__QueryBlockRequest         *message);
size_t xchain__contract__sdk__query_block_request__get_packed_size
                     (const Xchain__Contract__Sdk__QueryBlockRequest   *message);
size_t xchain__contract__sdk__query_block_request__pack
                     (const Xchain__Contract__Sdk__QueryBlockRequest   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__query_block_request__pack_to_buffer
                     (const Xchain__Contract__Sdk__QueryBlockRequest   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__QueryBlockRequest *
       xchain__contract__sdk__query_block_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__query_block_request__free_unpacked
                     (Xchain__Contract__Sdk__QueryBlockRequest *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__QueryBlockResponse methods */
void   xchain__contract__sdk__query_block_response__init
                     (Xchain__Contract__Sdk__QueryBlockResponse         *message);
size_t xchain__contract__sdk__query_block_response__get_packed_size
                     (const Xchain__Contract__Sdk__QueryBlockResponse   *message);
size_t xchain__contract__sdk__query_block_response__pack
                     (const Xchain__Contract__Sdk__QueryBlockResponse   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__query_block_response__pack_to_buffer
                     (const Xchain__Contract__Sdk__QueryBlockResponse   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__QueryBlockResponse *
       xchain__contract__sdk__query_block_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__query_block_response__free_unpacked
                     (Xchain__Contract__Sdk__QueryBlockResponse *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__TransferRequest methods */
void   xchain__contract__sdk__transfer_request__init
                     (Xchain__Contract__Sdk__TransferRequest         *message);
size_t xchain__contract__sdk__transfer_request__get_packed_size
                     (const Xchain__Contract__Sdk__TransferRequest   *message);
size_t xchain__contract__sdk__transfer_request__pack
                     (const Xchain__Contract__Sdk__TransferRequest   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__transfer_request__pack_to_buffer
                     (const Xchain__Contract__Sdk__TransferRequest   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__TransferRequest *
       xchain__contract__sdk__transfer_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__transfer_request__free_unpacked
                     (Xchain__Contract__Sdk__TransferRequest *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__TransferResponse methods */
void   xchain__contract__sdk__transfer_response__init
                     (Xchain__Contract__Sdk__TransferResponse         *message);
size_t xchain__contract__sdk__transfer_response__get_packed_size
                     (const Xchain__Contract__Sdk__TransferResponse   *message);
size_t xchain__contract__sdk__transfer_response__pack
                     (const Xchain__Contract__Sdk__TransferResponse   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__transfer_response__pack_to_buffer
                     (const Xchain__Contract__Sdk__TransferResponse   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__TransferResponse *
       xchain__contract__sdk__transfer_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__transfer_response__free_unpacked
                     (Xchain__Contract__Sdk__TransferResponse *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__ContractCallRequest methods */
void   xchain__contract__sdk__contract_call_request__init
                     (Xchain__Contract__Sdk__ContractCallRequest         *message);
size_t xchain__contract__sdk__contract_call_request__get_packed_size
                     (const Xchain__Contract__Sdk__ContractCallRequest   *message);
size_t xchain__contract__sdk__contract_call_request__pack
                     (const Xchain__Contract__Sdk__ContractCallRequest   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__contract_call_request__pack_to_buffer
                     (const Xchain__Contract__Sdk__ContractCallRequest   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__ContractCallRequest *
       xchain__contract__sdk__contract_call_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__contract_call_request__free_unpacked
                     (Xchain__Contract__Sdk__ContractCallRequest *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__ContractCallResponse methods */
void   xchain__contract__sdk__contract_call_response__init
                     (Xchain__Contract__Sdk__ContractCallResponse         *message);
size_t xchain__contract__sdk__contract_call_response__get_packed_size
                     (const Xchain__Contract__Sdk__ContractCallResponse   *message);
size_t xchain__contract__sdk__contract_call_response__pack
                     (const Xchain__Contract__Sdk__ContractCallResponse   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__contract_call_response__pack_to_buffer
                     (const Xchain__Contract__Sdk__ContractCallResponse   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__ContractCallResponse *
       xchain__contract__sdk__contract_call_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__contract_call_response__free_unpacked
                     (Xchain__Contract__Sdk__ContractCallResponse *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__CrossContractQueryRequest methods */
void   xchain__contract__sdk__cross_contract_query_request__init
                     (Xchain__Contract__Sdk__CrossContractQueryRequest         *message);
size_t xchain__contract__sdk__cross_contract_query_request__get_packed_size
                     (const Xchain__Contract__Sdk__CrossContractQueryRequest   *message);
size_t xchain__contract__sdk__cross_contract_query_request__pack
                     (const Xchain__Contract__Sdk__CrossContractQueryRequest   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__cross_contract_query_request__pack_to_buffer
                     (const Xchain__Contract__Sdk__CrossContractQueryRequest   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__CrossContractQueryRequest *
       xchain__contract__sdk__cross_contract_query_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__cross_contract_query_request__free_unpacked
                     (Xchain__Contract__Sdk__CrossContractQueryRequest *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__CrossContractQueryResponse methods */
void   xchain__contract__sdk__cross_contract_query_response__init
                     (Xchain__Contract__Sdk__CrossContractQueryResponse         *message);
size_t xchain__contract__sdk__cross_contract_query_response__get_packed_size
                     (const Xchain__Contract__Sdk__CrossContractQueryResponse   *message);
size_t xchain__contract__sdk__cross_contract_query_response__pack
                     (const Xchain__Contract__Sdk__CrossContractQueryResponse   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__cross_contract_query_response__pack_to_buffer
                     (const Xchain__Contract__Sdk__CrossContractQueryResponse   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__CrossContractQueryResponse *
       xchain__contract__sdk__cross_contract_query_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__cross_contract_query_response__free_unpacked
                     (Xchain__Contract__Sdk__CrossContractQueryResponse *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__Response methods */
void   xchain__contract__sdk__response__init
                     (Xchain__Contract__Sdk__Response         *message);
size_t xchain__contract__sdk__response__get_packed_size
                     (const Xchain__Contract__Sdk__Response   *message);
size_t xchain__contract__sdk__response__pack
                     (const Xchain__Contract__Sdk__Response   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__response__pack_to_buffer
                     (const Xchain__Contract__Sdk__Response   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__Response *
       xchain__contract__sdk__response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__response__free_unpacked
                     (Xchain__Contract__Sdk__Response *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__SetOutputRequest methods */
void   xchain__contract__sdk__set_output_request__init
                     (Xchain__Contract__Sdk__SetOutputRequest         *message);
size_t xchain__contract__sdk__set_output_request__get_packed_size
                     (const Xchain__Contract__Sdk__SetOutputRequest   *message);
size_t xchain__contract__sdk__set_output_request__pack
                     (const Xchain__Contract__Sdk__SetOutputRequest   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__set_output_request__pack_to_buffer
                     (const Xchain__Contract__Sdk__SetOutputRequest   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__SetOutputRequest *
       xchain__contract__sdk__set_output_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__set_output_request__free_unpacked
                     (Xchain__Contract__Sdk__SetOutputRequest *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__SetOutputResponse methods */
void   xchain__contract__sdk__set_output_response__init
                     (Xchain__Contract__Sdk__SetOutputResponse         *message);
size_t xchain__contract__sdk__set_output_response__get_packed_size
                     (const Xchain__Contract__Sdk__SetOutputResponse   *message);
size_t xchain__contract__sdk__set_output_response__pack
                     (const Xchain__Contract__Sdk__SetOutputResponse   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__set_output_response__pack_to_buffer
                     (const Xchain__Contract__Sdk__SetOutputResponse   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__SetOutputResponse *
       xchain__contract__sdk__set_output_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__set_output_response__free_unpacked
                     (Xchain__Contract__Sdk__SetOutputResponse *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__GetCallArgsRequest methods */
void   xchain__contract__sdk__get_call_args_request__init
                     (Xchain__Contract__Sdk__GetCallArgsRequest         *message);
size_t xchain__contract__sdk__get_call_args_request__get_packed_size
                     (const Xchain__Contract__Sdk__GetCallArgsRequest   *message);
size_t xchain__contract__sdk__get_call_args_request__pack
                     (const Xchain__Contract__Sdk__GetCallArgsRequest   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__get_call_args_request__pack_to_buffer
                     (const Xchain__Contract__Sdk__GetCallArgsRequest   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__GetCallArgsRequest *
       xchain__contract__sdk__get_call_args_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__get_call_args_request__free_unpacked
                     (Xchain__Contract__Sdk__GetCallArgsRequest *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__TxInput methods */
void   xchain__contract__sdk__tx_input__init
                     (Xchain__Contract__Sdk__TxInput         *message);
size_t xchain__contract__sdk__tx_input__get_packed_size
                     (const Xchain__Contract__Sdk__TxInput   *message);
size_t xchain__contract__sdk__tx_input__pack
                     (const Xchain__Contract__Sdk__TxInput   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__tx_input__pack_to_buffer
                     (const Xchain__Contract__Sdk__TxInput   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__TxInput *
       xchain__contract__sdk__tx_input__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__tx_input__free_unpacked
                     (Xchain__Contract__Sdk__TxInput *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__TxOutput methods */
void   xchain__contract__sdk__tx_output__init
                     (Xchain__Contract__Sdk__TxOutput         *message);
size_t xchain__contract__sdk__tx_output__get_packed_size
                     (const Xchain__Contract__Sdk__TxOutput   *message);
size_t xchain__contract__sdk__tx_output__pack
                     (const Xchain__Contract__Sdk__TxOutput   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__tx_output__pack_to_buffer
                     (const Xchain__Contract__Sdk__TxOutput   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__TxOutput *
       xchain__contract__sdk__tx_output__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__tx_output__free_unpacked
                     (Xchain__Contract__Sdk__TxOutput *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__Transaction methods */
void   xchain__contract__sdk__transaction__init
                     (Xchain__Contract__Sdk__Transaction         *message);
size_t xchain__contract__sdk__transaction__get_packed_size
                     (const Xchain__Contract__Sdk__Transaction   *message);
size_t xchain__contract__sdk__transaction__pack
                     (const Xchain__Contract__Sdk__Transaction   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__transaction__pack_to_buffer
                     (const Xchain__Contract__Sdk__Transaction   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__Transaction *
       xchain__contract__sdk__transaction__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__transaction__free_unpacked
                     (Xchain__Contract__Sdk__Transaction *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__Block methods */
void   xchain__contract__sdk__block__init
                     (Xchain__Contract__Sdk__Block         *message);
size_t xchain__contract__sdk__block__get_packed_size
                     (const Xchain__Contract__Sdk__Block   *message);
size_t xchain__contract__sdk__block__pack
                     (const Xchain__Contract__Sdk__Block   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__block__pack_to_buffer
                     (const Xchain__Contract__Sdk__Block   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__Block *
       xchain__contract__sdk__block__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__block__free_unpacked
                     (Xchain__Contract__Sdk__Block *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__GetAccountAddressesRequest methods */
void   xchain__contract__sdk__get_account_addresses_request__init
                     (Xchain__Contract__Sdk__GetAccountAddressesRequest         *message);
size_t xchain__contract__sdk__get_account_addresses_request__get_packed_size
                     (const Xchain__Contract__Sdk__GetAccountAddressesRequest   *message);
size_t xchain__contract__sdk__get_account_addresses_request__pack
                     (const Xchain__Contract__Sdk__GetAccountAddressesRequest   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__get_account_addresses_request__pack_to_buffer
                     (const Xchain__Contract__Sdk__GetAccountAddressesRequest   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__GetAccountAddressesRequest *
       xchain__contract__sdk__get_account_addresses_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__get_account_addresses_request__free_unpacked
                     (Xchain__Contract__Sdk__GetAccountAddressesRequest *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__GetAccountAddressesResponse methods */
void   xchain__contract__sdk__get_account_addresses_response__init
                     (Xchain__Contract__Sdk__GetAccountAddressesResponse         *message);
size_t xchain__contract__sdk__get_account_addresses_response__get_packed_size
                     (const Xchain__Contract__Sdk__GetAccountAddressesResponse   *message);
size_t xchain__contract__sdk__get_account_addresses_response__pack
                     (const Xchain__Contract__Sdk__GetAccountAddressesResponse   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__get_account_addresses_response__pack_to_buffer
                     (const Xchain__Contract__Sdk__GetAccountAddressesResponse   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__GetAccountAddressesResponse *
       xchain__contract__sdk__get_account_addresses_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__get_account_addresses_response__free_unpacked
                     (Xchain__Contract__Sdk__GetAccountAddressesResponse *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__PostLogRequest methods */
void   xchain__contract__sdk__post_log_request__init
                     (Xchain__Contract__Sdk__PostLogRequest         *message);
size_t xchain__contract__sdk__post_log_request__get_packed_size
                     (const Xchain__Contract__Sdk__PostLogRequest   *message);
size_t xchain__contract__sdk__post_log_request__pack
                     (const Xchain__Contract__Sdk__PostLogRequest   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__post_log_request__pack_to_buffer
                     (const Xchain__Contract__Sdk__PostLogRequest   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__PostLogRequest *
       xchain__contract__sdk__post_log_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__post_log_request__free_unpacked
                     (Xchain__Contract__Sdk__PostLogRequest *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__PostLogResponse methods */
void   xchain__contract__sdk__post_log_response__init
                     (Xchain__Contract__Sdk__PostLogResponse         *message);
size_t xchain__contract__sdk__post_log_response__get_packed_size
                     (const Xchain__Contract__Sdk__PostLogResponse   *message);
size_t xchain__contract__sdk__post_log_response__pack
                     (const Xchain__Contract__Sdk__PostLogResponse   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__post_log_response__pack_to_buffer
                     (const Xchain__Contract__Sdk__PostLogResponse   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__PostLogResponse *
       xchain__contract__sdk__post_log_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__post_log_response__free_unpacked
                     (Xchain__Contract__Sdk__PostLogResponse *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__EmitEventRequest methods */
void   xchain__contract__sdk__emit_event_request__init
                     (Xchain__Contract__Sdk__EmitEventRequest         *message);
size_t xchain__contract__sdk__emit_event_request__get_packed_size
                     (const Xchain__Contract__Sdk__EmitEventRequest   *message);
size_t xchain__contract__sdk__emit_event_request__pack
                     (const Xchain__Contract__Sdk__EmitEventRequest   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__emit_event_request__pack_to_buffer
                     (const Xchain__Contract__Sdk__EmitEventRequest   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__EmitEventRequest *
       xchain__contract__sdk__emit_event_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__emit_event_request__free_unpacked
                     (Xchain__Contract__Sdk__EmitEventRequest *message,
                      ProtobufCAllocator *allocator);
/* Xchain__Contract__Sdk__EmitEventResponse methods */
void   xchain__contract__sdk__emit_event_response__init
                     (Xchain__Contract__Sdk__EmitEventResponse         *message);
size_t xchain__contract__sdk__emit_event_response__get_packed_size
                     (const Xchain__Contract__Sdk__EmitEventResponse   *message);
size_t xchain__contract__sdk__emit_event_response__pack
                     (const Xchain__Contract__Sdk__EmitEventResponse   *message,
                      uint8_t             *out);
size_t xchain__contract__sdk__emit_event_response__pack_to_buffer
                     (const Xchain__Contract__Sdk__EmitEventResponse   *message,
                      ProtobufCBuffer     *buffer);
Xchain__Contract__Sdk__EmitEventResponse *
       xchain__contract__sdk__emit_event_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   xchain__contract__sdk__emit_event_response__free_unpacked
                     (Xchain__Contract__Sdk__EmitEventResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Xchain__Contract__Sdk__PingRequest_Closure)
                 (const Xchain__Contract__Sdk__PingRequest *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__PingResponse_Closure)
                 (const Xchain__Contract__Sdk__PingResponse *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__NativeCallRequest_Closure)
                 (const Xchain__Contract__Sdk__NativeCallRequest *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__NativeCallResponse_Closure)
                 (const Xchain__Contract__Sdk__NativeCallResponse *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__ArgPair_Closure)
                 (const Xchain__Contract__Sdk__ArgPair *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__CallArgs_Closure)
                 (const Xchain__Contract__Sdk__CallArgs *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__SyscallHeader_Closure)
                 (const Xchain__Contract__Sdk__SyscallHeader *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__PutRequest_Closure)
                 (const Xchain__Contract__Sdk__PutRequest *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__PutResponse_Closure)
                 (const Xchain__Contract__Sdk__PutResponse *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__GetRequest_Closure)
                 (const Xchain__Contract__Sdk__GetRequest *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__GetResponse_Closure)
                 (const Xchain__Contract__Sdk__GetResponse *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__DeleteRequest_Closure)
                 (const Xchain__Contract__Sdk__DeleteRequest *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__DeleteResponse_Closure)
                 (const Xchain__Contract__Sdk__DeleteResponse *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__IteratorRequest_Closure)
                 (const Xchain__Contract__Sdk__IteratorRequest *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__IteratorItem_Closure)
                 (const Xchain__Contract__Sdk__IteratorItem *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__IteratorResponse_Closure)
                 (const Xchain__Contract__Sdk__IteratorResponse *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__QueryTxRequest_Closure)
                 (const Xchain__Contract__Sdk__QueryTxRequest *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__QueryTxResponse_Closure)
                 (const Xchain__Contract__Sdk__QueryTxResponse *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__QueryBlockRequest_Closure)
                 (const Xchain__Contract__Sdk__QueryBlockRequest *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__QueryBlockResponse_Closure)
                 (const Xchain__Contract__Sdk__QueryBlockResponse *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__TransferRequest_Closure)
                 (const Xchain__Contract__Sdk__TransferRequest *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__TransferResponse_Closure)
                 (const Xchain__Contract__Sdk__TransferResponse *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__ContractCallRequest_Closure)
                 (const Xchain__Contract__Sdk__ContractCallRequest *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__ContractCallResponse_Closure)
                 (const Xchain__Contract__Sdk__ContractCallResponse *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__CrossContractQueryRequest_Closure)
                 (const Xchain__Contract__Sdk__CrossContractQueryRequest *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__CrossContractQueryResponse_Closure)
                 (const Xchain__Contract__Sdk__CrossContractQueryResponse *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__Response_Closure)
                 (const Xchain__Contract__Sdk__Response *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__SetOutputRequest_Closure)
                 (const Xchain__Contract__Sdk__SetOutputRequest *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__SetOutputResponse_Closure)
                 (const Xchain__Contract__Sdk__SetOutputResponse *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__GetCallArgsRequest_Closure)
                 (const Xchain__Contract__Sdk__GetCallArgsRequest *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__TxInput_Closure)
                 (const Xchain__Contract__Sdk__TxInput *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__TxOutput_Closure)
                 (const Xchain__Contract__Sdk__TxOutput *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__Transaction_Closure)
                 (const Xchain__Contract__Sdk__Transaction *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__Block_Closure)
                 (const Xchain__Contract__Sdk__Block *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__GetAccountAddressesRequest_Closure)
                 (const Xchain__Contract__Sdk__GetAccountAddressesRequest *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__GetAccountAddressesResponse_Closure)
                 (const Xchain__Contract__Sdk__GetAccountAddressesResponse *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__PostLogRequest_Closure)
                 (const Xchain__Contract__Sdk__PostLogRequest *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__PostLogResponse_Closure)
                 (const Xchain__Contract__Sdk__PostLogResponse *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__EmitEventRequest_Closure)
                 (const Xchain__Contract__Sdk__EmitEventRequest *message,
                  void *closure_data);
typedef void (*Xchain__Contract__Sdk__EmitEventResponse_Closure)
                 (const Xchain__Contract__Sdk__EmitEventResponse *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor xchain__contract__sdk__ping_request__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__ping_response__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__native_call_request__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__native_call_response__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__arg_pair__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__call_args__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__syscall_header__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__put_request__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__put_response__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__get_request__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__get_response__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__delete_request__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__delete_response__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__iterator_request__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__iterator_item__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__iterator_response__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__query_tx_request__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__query_tx_response__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__query_block_request__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__query_block_response__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__transfer_request__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__transfer_response__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__contract_call_request__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__contract_call_response__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__cross_contract_query_request__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__cross_contract_query_response__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__response__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__set_output_request__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__set_output_response__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__get_call_args_request__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__tx_input__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__tx_output__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__transaction__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__block__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__get_account_addresses_request__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__get_account_addresses_response__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__post_log_request__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__post_log_response__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__emit_event_request__descriptor;
extern const ProtobufCMessageDescriptor xchain__contract__sdk__emit_event_response__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_contract_2eproto__INCLUDED */
