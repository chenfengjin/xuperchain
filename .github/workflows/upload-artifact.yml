on: [release]
name: Release
jobs:
  upload-artifact:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        go-version: [1.13.x]
    runs-on: ${{ matrix.platform }}

    steps:
    - name: Install Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}

    - name: Checkout code
      uses: actions/checkout@v2
    - name : zip package
      run: |
        make && tar -zcvf  xchain-${{ matrix.platform }}.tar.gz output 
        echo ${{ github.event.inputs }}
    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: ${{ github.ref }}-1
    #     release_name: {{ github.ref }}
    #     draft: false
    #     prerelease: false
    # - name: Upload Release Asset
    #   id: upload-release-asset 
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
    #     asset_path: xuperchain-${{ matrix.platform }}.tar.gz
    #     asset_name: xuperchain-${{ matrix.platform }}.tar.gz  