on:
  create:
    ref_type: branch
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Binary Release
jobs:
  build-linux-amd64:
    strategy:
      matrix:
        go-version: [1.13.x]
    name: build-linux
    runs-on: ubuntu-18.64
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          make 
      - name: Build tar package 
        run: |
          tar zcvf  xuperchain-linux-amd64.tar.gz output
      - name: upload artificts
        uses: actions/upload-artifact@v2
        with:
          name: xuperchain-linux-amd64.tar.gz
          path: xuperchain-linux-amd64.tar.gz

  build-darwin-amd64:
    strategy:
      matrix:
        go-version: [1.13.x]
    name: build-darwin-amd64
    runs-on: macos-10.15
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        run: |
          make 
      - name: Build tar package 
        run: |
          tar zcvf  xuperchain-darwin-amd64.tar.gz output
      - name: upload artificts
        uses: actions/upload-artifact@v2
        with:
          name: xuperchain-darwin-amd64.tar.gz
          path: xuperchain-darwin-amd64.tar.gz

  create_release:
    runs-on: ubuntu-latest
    needs: [build-linux-amd64, build-darwin-amd64]
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release Draft
          draft: true
          prerelease: false

      - uses: actions/download-artifact@v2
        with:
          name: xuperchain-linux-amd64.tar.gz
      - uses: actions/download-artifact@v2
        with:
          name: xuperchain-darwin-amd64.tar.gz

      - name: Upload Linux Amd64
        id: upload-linux-amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: xuperchain-linux-amd64.tar.gz
          asset_name:  xuperchain-linux-amd64.tar.gz
          asset_content_type: application/x-tar

      - name: Upload Darwin Amd64
        id: upload-darwin-amd64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: xuperchain-darwin-amd64.tar.gz
          asset_name:  xuperchain-darwin-amd64.tar.gz
          asset_content_type: application/x-tar